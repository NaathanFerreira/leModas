[{"C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\index.js":"1","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\main\\App.jsx":"3","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Logo.jsx":"4","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Nav.jsx":"5","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Main.jsx":"6","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Header.jsx":"7","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Footer.jsx":"8","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Clientes\\Clientes.jsx":"9","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Button.jsx":"10","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Clientes\\Formulario.jsx":"11"},{"size":462,"mtime":1609032005397,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":579,"mtime":1609550106933,"results":"15","hashOfConfig":"13"},{"size":287,"mtime":1609550106923,"results":"16","hashOfConfig":"13"},{"size":315,"mtime":1609721382176,"results":"17","hashOfConfig":"13"},{"size":348,"mtime":1609628870292,"results":"18","hashOfConfig":"13"},{"size":309,"mtime":1609092186635,"results":"19","hashOfConfig":"13"},{"size":188,"mtime":1609092499392,"results":"20","hashOfConfig":"13"},{"size":6165,"mtime":1609733958556,"results":"21","hashOfConfig":"13"},{"size":196,"mtime":1609384694933,"results":"22","hashOfConfig":"13"},{"size":4854,"mtime":1609724885302,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"w0u899",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"26"},"C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\index.js",[],["57","58"],"C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\main\\App.jsx",["59"],"import React from 'react'\r\nimport './App.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css' \r\n\r\n\r\nimport Logo from '../components/Logo'\r\nimport Nav from '../components/Nav'\r\nimport Clientes from '../components/Clientes/Clientes'\r\nimport Footer from '../components/Footer'\r\n\r\nexport default props => \r\n    <BrowserRouter>\r\n        <div className=\"app\">\r\n            <Logo />\r\n            <Nav />\r\n            <Clientes />\r\n            <Footer />\r\n        </div>\r\n    </BrowserRouter>","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Logo.jsx",["60"],"import React from 'react'\r\nimport './Logo.css'\r\nimport Logo from '../assets/imgs/logo.png'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default props => \r\n    <aside className=\"logo\">\r\n        <Link to=\"/clientes\">\r\n            <img src={Logo} alt=\"\"/>\r\n        </Link>\r\n    </aside>","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Nav.jsx",["61"],"import React from 'react'\r\nimport './Nav.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default props => \r\n    <aside className=\"menu-area\">\r\n        <nav className=\"menu\">\r\n            <Link to=\"/\">\r\n                <i className=\"fa fa-users\"></i> Clientes\r\n            </Link>\r\n        </nav>\r\n    </aside>","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Main.jsx",["62"],"import React, {Fragment} from 'react'\r\nimport './Main.css'\r\nimport Header from './Header'\r\n\r\nexport default props => \r\n    <Fragment>\r\n        <Header {...props}/>\r\n        <main className=\"content container-fluid\">\r\n            <div className=\"p-3 mt-3 mb-3\">\r\n                {props.children}\r\n            </div>\r\n        </main>\r\n    </Fragment>","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Header.jsx",["63"],"import React from 'react'\r\nimport './Header.css'\r\n\r\nexport default props => \r\n    <header className=\"header\">\r\n        <h1>\r\n            <i className={`fa fa-${props.icon}`}></i> {props.titulo}\r\n        </h1>\r\n        <p className=\"lead text-muted\">\r\n            {props.subtitulo}\r\n        </p>\r\n    </header>",["64","65"],"C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Footer.jsx",["66"],"import React from 'react'\r\nimport './Footer.css'\r\n\r\nexport default props => \r\n    <footer className=\"footer\">\r\n        <span> Desenvolvido por <strong>Nathan</strong></span>\r\n    </footer>","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Clientes\\Clientes.jsx",["67","68","69","70"],"import React, {Component, useState} from 'react'\r\nimport Main from '../Main'\r\nimport axios from 'axios'\r\nimport Button from '../Button'\r\nimport Formulario from './Formulario'\r\nimport './Cliente.css'\r\n\r\nimport { mask, unMask} from 'remask'\r\n\r\n\r\nconst headerProps = {\r\n    icon: \"users\",\r\n    titulo: \"Clientes\",\r\n    subtitulo: \"Cadastrar, alterar e excluir clientes\"\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/clientes'\r\n\r\nconst initialState = {\r\n    cliente: { nome:'', telefone: '', valor_divida: '', cpf: '', endereco: ''},\r\n    list: []\r\n}\r\n\r\nexport default class Clientes extends Component {\r\n\r\n\r\n    state = {...initialState}\r\n\r\n\r\n    componentDidMount(){\r\n        axios(baseUrl).then(response => {\r\n            this.setState({ list: response.data })\r\n        })\r\n    }\r\n\r\n    // FUNÇÕES DO FORMULÁRIO\r\n    save(){\r\n        const cliente = this.state.cliente\r\n        if(cliente.nome && cliente.telefone && cliente.valor_divida && cliente.cpf && cliente.endereco) {\r\n            cliente.valor_divida = parseFloat(cliente.valor_divida)\r\n            const method = cliente.id ? 'put' : 'post'\r\n            const url = cliente.id ? `${baseUrl}/${cliente.id}` : baseUrl\r\n\r\n            axios[method](url, cliente).then( response => {\r\n                const list = this.getUpdatedList(response.data)\r\n                this.setState({ cliente : initialState.cliente, list })\r\n            })\r\n        } else {\r\n            alert(\"Você deve preencher todos os campos! \")\r\n        }\r\n    }\r\n\r\n    getUpdatedList(cliente, add = true){\r\n        const list = this.state.list.filter(c => c.id != cliente.id)\r\n        if(add) list.unshift(cliente)\r\n        return list\r\n    }\r\n\r\n    clear(){\r\n        this.setState({ cliente: initialState.cliente })\r\n    }\r\n\r\n    updateField(event){\r\n        const cliente = { ...this.state.cliente}\r\n        cliente[event.target.name] = event.target.value\r\n        this.setState({ cliente })\r\n    }\r\n\r\n    load(cliente){\r\n        this.setState({ cliente })\r\n    }\r\n\r\n    remove(cliente){\r\n        axios.delete(`${baseUrl}/${cliente.id}`).then(resp => {\r\n            const list = this.getUpdatedList(cliente, false)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    // LISTA E FUNÇÕES DE CLIENTES\r\n    pagarDividaOuCobrar(qtd, cliente, cobrar = false){\r\n\r\n        cobrar ? cliente.valor_divida += qtd : cliente.valor_divida -= qtd\r\n        const url = `${baseUrl}/${cliente.id}`\r\n        axios.put(url, cliente).then( response => {\r\n            const list = this.getUpdatedList(response.data)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n\r\n    renderTable(){\r\n        return (         \r\n            <table className=\"table table-striped table-bordered mt-4\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        {/* <th> Id </th> */}\r\n                        <th> Nome </th>\r\n                        <th> Telefone </th>\r\n                        <th> Dívida </th>\r\n                        <th> Ações </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    renderRows() {\r\n        return this.state.list.map(cliente => {\r\n            return (\r\n                <tr key={cliente.id}>\r\n                    <td>\r\n                        <button id=\"btnName\">\r\n                            {cliente.nome}\r\n                        </button>\r\n                    </td>\r\n                    <td>{cliente.telefone}</td>\r\n                    <td>{parseFloat(cliente.valor_divida).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}</td>\r\n                    <td>\r\n\r\n                        <a href=\"#form\">\r\n                            <Button color=\"warning\" callback = {() => this.load(cliente)}>\r\n                                <i className=\"fa fa-pencil\"></i>\r\n                            </Button>\r\n                        </a>\r\n\r\n                        <Button color=\"dark\" bootstrap=\"ml-2\" callback = {() => {\r\n                            let qtd = prompt(`Deseja abater qual valor na dívida de ${cliente.nome.toUpperCase()}`)\r\n                            let qtdNum = parseFloat(qtd)\r\n                            if(isNaN(qtdNum)){\r\n                                alert(\"Você deve digitar um valor numérico !\")\r\n                            } else {\r\n                                this.pagarDividaOuCobrar(qtdNum, cliente)\r\n                            }\r\n                        }}>\r\n                                Pagar\r\n                        </Button>\r\n\r\n                        <Button color=\"primary\" bootstrap=\"ml-2\" callback = {() => {\r\n                            let qtd = prompt(`Deseja cobrar qual valor de ${cliente.nome.toUpperCase()}`)\r\n                            let qtdNum = parseFloat(qtd)\r\n                            if(isNaN(qtdNum)){\r\n                                alert(\"Você deve digitar um valor numérico !\")\r\n                            } else {\r\n                                this.pagarDividaOuCobrar(qtdNum, cliente, true)\r\n                            }\r\n                        }}>\r\n                                Cobrar\r\n                        </Button>\r\n\r\n                        <Button color=\"danger\" bootstrap=\"ml-2\" callback = {() => this.remove(cliente)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </Button>\r\n                        \r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Main {...headerProps}>\r\n            <Formulario \r\n            id=\"form\"\r\n            updateField = {e => this.updateField(e)}\r\n            clear  = {() => this.clear()}\r\n            save = {() => this.save()}\r\n            valueNome = {this.state.cliente.nome}  \r\n            valueTelefone = {this.state.cliente.telefone} \r\n            valueDivida = {this.state.cliente.valor_divida}\r\n            endereco = {this.state.cliente.endereco}\r\n            cpf = {this.state.cliente.cpf}/>\r\n            \r\n            {this.renderTable()}\r\n        </Main>\r\n    }\r\n}","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Button.jsx",["71"],"import React from 'react'\r\n\r\nexport default props =>\r\n    <button className={`btn btn-${props.color} ${props.bootstrap}`} onClick={() => props.callback()}>\r\n        {props.children}\r\n    </button>","C:\\Users\\Nathan\\Desktop\\web\\leModas\\frontend\\src\\components\\Clientes\\Formulario.jsx",["72","73"],"import React, { useEffect, useState } from \"react\";\r\nimport Collapse from 'react-bootstrap/Collapse'\r\nimport Button from '../Button'\r\nimport './Formulario.css'\r\nimport { mask} from 'remask'\r\n\r\n\r\nconst patternTelefone = ['(99) 99999-9999']\r\nconst patternCPF = ['999.999.999-99']\r\n\r\nexport default props => {\r\n        const [open, setOpen] = useState(false)\r\n\r\n        let icon = open ? \"fa-arrow-up\" : \"fa-arrow-down\"\r\n        return (\r\n            <div id={props.id}>\r\n                <div>\r\n                    <button className=\"btn btn-info mb-3\"\r\n                    onClick={() => setOpen(!open)}\r\n                    aria-controls=\"collapse-form\"\r\n                    aria-expanded={open}>\r\n                        <span><i className={`fa ${icon}`}></i> <strong>Cadastrar novo cliente</strong></span>\r\n                    </button>\r\n                </div>\r\n\r\n                <Collapse in={open}>\r\n                    <div className=\"form\" id=\"collapse-form\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-4 col-lg-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label><strong>Nome</strong></label>\r\n                                    <input type=\"text\" className=\"form-control\" \r\n                                    onChange={e => props.updateField(e)} name=\"nome\"\r\n                                    value={props.valueNome} placeholder=\"Digite o nome...\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-4 col-lg-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label><strong>Telefone</strong></label>\r\n                                    <input type=\"text\" className=\"form-control\"\r\n                                    onChange={e => props.updateField(e)} name=\"telefone\"\r\n                                    value={mask(`${props.valueTelefone}`, patternTelefone)} placeholder=\"Digíte o número de telefone\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-4 col-lg-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label><strong>Dívida</strong></label>\r\n                                    <div className=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\">R$</span>\r\n                                        </div>\r\n                                    <input type=\"number\" className=\"form-control\"\r\n                                    onChange={e => props.updateField(e)} name=\"valor_divida\" id=\"divida\"\r\n                                    value={props.valueDivida} placeholder=\"Digite o valor da dívida...\"/>\r\n                                    </div>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-4 col-lg-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label><strong>CPF</strong></label>\r\n                                    <input type=\"text\" className=\"form-control\"\r\n                                    onChange={e => props.updateField(e)}\r\n                                    value={mask(`${props.cpf}`, patternCPF)}\r\n                                    name=\"cpf\" placeholder=\"Digíte o CPF\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label><strong>Endereço</strong></label>\r\n                                    <input type=\"text\" className=\"form-control\"\r\n                                    onChange={e => props.updateField(e)}\r\n                                    value={props.endereco}\r\n                                    name=\"endereco\" placeholder=\"Digíte o endereço\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 d-flex justify-content-end\">\r\n                                <Button color=\"success\" callback = {e => props.save(e)}> Salvar </Button>\r\n                                <Button color =\"secondary\" bootstrap=\"ml-2\" callback = {e => props.clear()}> Cancelar </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                                     \r\n                </Collapse>\r\n                <hr/>\r\n            </div>\r\n        )\r\n}",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":13,"column":1,"nodeType":"80","endLine":21,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":6,"column":1,"nodeType":"80","endLine":11,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":5,"column":1,"nodeType":"80","endLine":12,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":5,"column":1,"nodeType":"80","endLine":13,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":4,"column":1,"nodeType":"80","endLine":12,"endColumn":14},{"ruleId":"74","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":1,"nodeType":"80","endLine":7,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":35},{"ruleId":"83","severity":1,"message":"87","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":14},{"ruleId":"83","severity":1,"message":"88","line":8,"column":16,"nodeType":"85","messageId":"86","endLine":8,"endColumn":22},{"ruleId":"89","severity":1,"message":"90","line":54,"column":55,"nodeType":"91","messageId":"92","endLine":54,"endColumn":57},{"ruleId":"78","severity":1,"message":"79","line":3,"column":1,"nodeType":"80","endLine":6,"endColumn":14},{"ruleId":"83","severity":1,"message":"93","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":11,"column":1,"nodeType":"80","endLine":94,"endColumn":2},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["94"],["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'mask' is defined but never used.","'unMask' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]